{"ast":null,"code":"var _jsxFileName = \"/home/shashank/This/Projects and Attempts/React/cloudbook/src/context/notes/NoteState.js\",\n  _s = $RefreshSig$();\nimport NoteContext from \"./NoteContext\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const noteInitial = [];\n  const [notes, setNotes] = useState(noteInitial);\n  const getNote = async () => {\n    //API Call\n    const response = await fetch(`${host}/note/fetchnote`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcyMWI1MTc2OWVmOWM5ZmYxZWMxZjI5In0sImlhdCI6MTczMDI2MjU1M30.YpiTSZIJ9xjiajL-tS8o8bLShH9r2TthJsihPefzVlU\"\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  };\n\n  //Add Note\n  const addNote = async (title, description, tag) => {\n    //API Call\n    const response = await fetch(`${host}/note/createnote`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcyMWI1MTc2OWVmOWM5ZmYxZWMxZjI5In0sImlhdCI6MTczMDI2MjU1M30.YpiTSZIJ9xjiajL-tS8o8bLShH9r2TthJsihPefzVlU\"\n      }\n    });\n    const note = {\n      _id: \"0067288a15e51f45ed2ed26a27\",\n      user: \"6721b51769ef9c9ff1ec1f29\",\n      title: title,\n      description: description,\n      tag: tag,\n      date: \"2024-11-04T08:47:17.359Z\",\n      __v: 0\n    };\n    setNotes(notes.concat(note));\n  };\n\n  //Update Note\n  const updateNote = async (title, description, tag, id) => {\n    //API Call\n    const response = await fetch(`${host}/note/updatenote/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcyMWI1MTc2OWVmOWM5ZmYxZWMxZjI5In0sImlhdCI6MTczMDI2MjU1M30.YpiTSZIJ9xjiajL-tS8o8bLShH9r2TthJsihPefzVlU\"\n      }\n    });\n    console.log(response.status);\n\n    //Logic to edit the note\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n\n  //Delete Note\n  const deleteNote = async id => {\n    const response = await fetch(`${host}/note/deletenode/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcyMWI1MTc2OWVmOWM5ZmYxZWMxZjI5In0sImlhdCI6MTczMDI2MjU1M30.YpiTSZIJ9xjiajL-tS8o8bLShH9r2TthJsihPefzVlU\"\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n      value: {\n        notes,\n        addNote,\n        updateNote,\n        deleteNote,\n        getNote\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(NoteState, \"vS+yqGJfAcVJ8XYDTXAd5OCG4B0=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","NoteState","props","_s","host","noteInitial","notes","setNotes","getNote","response","fetch","method","headers","json","console","log","addNote","title","description","tag","body","JSON","stringify","note","_id","user","date","__v","concat","updateNote","id","status","index","length","element","deleteNote","newNotes","filter","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shashank/This/Projects and Attempts/React/cloudbook/src/context/notes/NoteState.js"],"sourcesContent":["import NoteContext from \"./NoteContext\";\nimport React, { useState } from \"react\";\n\nconst NoteState = (props) => {\n  const host = \"http://localhost:5000\";\n  const noteInitial = [];\n  const [notes, setNotes] = useState(noteInitial);\n\n  const getNote = async () => {\n    //API Call\n    const response = await fetch(`${host}/note/fetchnote`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\":\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcyMWI1MTc2OWVmOWM5ZmYxZWMxZjI5In0sImlhdCI6MTczMDI2MjU1M30.YpiTSZIJ9xjiajL-tS8o8bLShH9r2TthJsihPefzVlU\",\n      },\n    });\n    const json = await response.json()\n    console.log(json)\n    setNotes(json)\n  };\n\n  //Add Note\n  const addNote = async (title, description, tag) => {\n    //API Call\n    const response = await fetch(`${host}/note/createnote`, {\n      method: \"POST\",\n      body: JSON.stringify({ title, description, tag }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\":\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcyMWI1MTc2OWVmOWM5ZmYxZWMxZjI5In0sImlhdCI6MTczMDI2MjU1M30.YpiTSZIJ9xjiajL-tS8o8bLShH9r2TthJsihPefzVlU\",\n      },\n    });\n    const note = {\n      _id: \"0067288a15e51f45ed2ed26a27\",\n      user: \"6721b51769ef9c9ff1ec1f29\",\n      title: title,\n      description: description,\n      tag: tag,\n      date: \"2024-11-04T08:47:17.359Z\",\n      __v: 0,\n    };\n    setNotes(notes.concat(note));\n  };\n\n  //Update Note\n  const updateNote = async (title, description, tag, id) => {\n    //API Call\n    const response = await fetch(`${host}/note/updatenote/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({ title, description, tag }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\":\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcyMWI1MTc2OWVmOWM5ZmYxZWMxZjI5In0sImlhdCI6MTczMDI2MjU1M30.YpiTSZIJ9xjiajL-tS8o8bLShH9r2TthJsihPefzVlU\",\n      },\n    });\n    console.log(response.status);\n\n    //Logic to edit the note\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n\n  //Delete Note\n  const deleteNote = async (id) => {\n    const response = await fetch(`${host}/note/deletenode/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\":\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcyMWI1MTc2OWVmOWM5ZmYxZWMxZjI5In0sImlhdCI6MTczMDI2MjU1M30.YpiTSZIJ9xjiajL-tS8o8bLShH9r2TthJsihPefzVlU\",\n      },\n    });\n    const json = response.json()\n    console.log(json)\n    const newNotes = notes.filter((note) => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  return (\n    <>\n      <NoteContext.Provider value={{ notes, addNote, updateNote, deleteNote,getNote }}>\n        {props.children}\n      </NoteContext.Provider>\n    </>\n  );\n};\n\nexport default NoteState;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}